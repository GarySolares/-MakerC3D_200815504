package org.compi2.codigo3d.parser;

import java_cup.runtime.Symbol;

//PARSER PARA EL ARCHIVO DE ESCENARIOS
parser code
{://Codigo visible

    public void syntax_error(Symbol s){
        System.err.println(s);
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.err.println("T.T");
        System.err.println(s);
    }


:}

action code
{://Codigo de acciones
    public NodoC3D GenerarNodo(NodoC3D izq, NodoC3D der, String Operador)
	{
		String temp = ControlC3D.generaTemp();
        String c3d = temp + " = " + izq.getCad() +" "+ Operador +" "+ der.getCad() + ";\n";
        ControlC3D.agregarC3D(c3d);
		return new NodoC3D(temp);
	}
	
	public NodoC3D GenerarNodoNegar(NodoC3D exp)
	{
		String temp = ControlC3D.generaTemp();
        String c3d = temp + " = - " + exp.getCad() + ";\n";
        ControlC3D.agregarC3D(c3d);
        return new NodoC3D(temp); 
	}
	
	public NodoC3D GenerarNodoNot(NodoC3D exp)
	{
		String temp = ControlC3D.generaTemp();
        String c3d = temp + " = ! " + exp.getCad() + ";\n";
        ControlC3D.agregarC3D(c3d);
        return new NodoC3D(temp); 
	}

	
:}
terminal Op_Or, Op_And,Op_Not;
terminal Op_MaQ, Op_MeQ, Op_MaIQ, Op_MeIQ, Op_Dif, Op_Sem;
terminal String ID, ENTERO, DECIMAL;
terminal TokenC3D MAS, MENOS, MULT, DIV, POT, PAR_IZQ, PAR_DER;
nonterminal C3D_Object inicial, expresion,Expresion_Sin_Numero,Operacion_Or_Sin_Numero,Operacion_And_Sin_Numero,Operacion_Not,Operacion_Relacional_Sin_Numero,Operacion_Aritmetica_Sin_Numero,Operacion_Logica_Sin_Numero;

precedence left MAS, MENOS;
precedence left MULT, DIV; 
precedence right POT; 

start with inicial;

inicial     ::= {: ControlC3D.reiniciar(); :} Expresion_Sin_Numero:exp 
                    {: 
                        RESULT = exp;
                        ControlC3D.agregarC3D(exp.Show());
                    :};
					
					
					
					
					
	Expresion_Sin_Numero 	::= Operacion_Logica_Sin_Numero:exp {:RESULT = exp; :}
							;



Operacion_Logica_Sin_Numero	::=	Operacion_Or_Sin_Numero:exp{:RESULT = exp; :}
								;

Operacion_Or_Sin_Numero     ::=	Operacion_Or_Sin_Numero:izq  Op_Or  Operacion_And_Sin_Numero:der {:C3D_Object A = new C3D_Object(); A.generarLogicoOr(izq, der); RESULT =A;:}
								|Operacion_And_Sin_Numero:exp{:RESULT = exp; :}
								;

Operacion_And_Sin_Numero	::=	Operacion_And_Sin_Numero:izq  Op_And  Operacion_Not:der {:C3D_Object A = new C3D_Object(); A.generarLogicoAnd(izq, der); RESULT =A;:}
								|Operacion_Not:exp	{:RESULT = exp; :}
								;
								
								


Operacion_Not     			::= Op_Not  Operacion_Relacional_Sin_Numero:exp			{:C3D_Object A = new C3D_Object(); A.generarNegadoLogico(exp); RESULT =A;:}
								| Operacion_Relacional_Sin_Numero:exp	{:RESULT = exp; :}
								;									
								
								





Operacion_Relacional_Sin_Numero	::=   Operacion_Aritmetica_Sin_Numero:izq  Op_MaIQ  Operacion_Aritmetica_Sin_Numero:der		{:C3D_Object A = new C3D_Object(); A.generarRelacional(izq, der, ">="); RESULT =A;:}
									| Operacion_Aritmetica_Sin_Numero:izq  Op_MeIQ  Operacion_Aritmetica_Sin_Numero:der		{:C3D_Object A = new C3D_Object(); A.generarRelacional(izq, der, "<="); RESULT =A;:}
									| Operacion_Aritmetica_Sin_Numero:izq  Op_MeQ	 Operacion_Aritmetica_Sin_Numero:der	{:C3D_Object A = new C3D_Object(); A.generarRelacional(izq, der, "<"); RESULT =A;:}
									| Operacion_Aritmetica_Sin_Numero:izq  Op_MaQ 	 Operacion_Aritmetica_Sin_Numero:der	{:C3D_Object A = new C3D_Object(); A.generarRelacional(izq, der, ">"); RESULT =A;:}
									| Operacion_Aritmetica_Sin_Numero:izq  Op_Sem 	 Operacion_Aritmetica_Sin_Numero:der	{:C3D_Object A = new C3D_Object(); A.generarRelacional(izq, der, "=="); RESULT =A;:}
									| Operacion_Aritmetica_Sin_Numero:izq  Op_Dif 	 Operacion_Aritmetica_Sin_Numero:der	{:C3D_Object A = new C3D_Object(); A.generarRelacional(izq, der, "!="); RESULT =A;:}
									| Operacion_Aritmetica_Sin_Numero:exp													{:RESULT = exp; :}
									;
					
					
					
					
					
					
					
					
Operacion_Aritmetica_Sin_Numero ::= expresion:exp{:RESULT = exp; :};					
					
					
					
					
					
					
					

expresion   ::= expresion:izq MAS expresion:der		{:C3D_Object A = new C3D_Object(); A.generarAritmetico(izq, der, "+"); RESULT =A;:}
            |   expresion:izq MENOS expresion:der	{:C3D_Object A = new C3D_Object(); A.generarAritmetico(izq, der, "-"); RESULT =A;:}
            |   expresion:izq MULT expresion:der	{:C3D_Object A = new C3D_Object(); A.generarAritmetico(izq, der, "*"); RESULT =A;:}
            |   expresion:izq DIV expresion:der		{:C3D_Object A = new C3D_Object(); A.generarAritmetico(izq, der, "/"); RESULT =A;:}
            |   expresion:izq POT expresion:der		{:C3D_Object A = new C3D_Object(); A.generarAritmetico(izq, der, "^"); RESULT =A;:}
            |   MENOS expresion:exp 				{:C3D_Object A = new C3D_Object(); A.generarNegadoAritmetico(exp); RESULT =A;:}
            |   PAR_IZQ Expresion_Sin_Numero:exp PAR_DER       {:RESULT = exp; :}
            |   ID:id                               {:C3D_Object A = new C3D_Object(); A.generarSimple(id); RESULT =A;:}
            |   ENTERO:entero                       {:C3D_Object A = new C3D_Object(); A.generarSimple(entero); RESULT =A;:}
            |   DECIMAL:decimal                     {:C3D_Object A = new C3D_Object(); A.generarSimple(decimal); RESULT =A;:}
            ;